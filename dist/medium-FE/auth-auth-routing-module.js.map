{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/registration/regitration.component.ts","./src/app/auth/registration/regitration.component.html"],"names":[],"mappings":"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","file":"auth-auth-routing-module.js","sourcesContent":["import {RouterModule, Routes} from \"@angular/router\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {RegitrationComponent} from \"./registration/regitration.component\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {LogoutComponent} from \"./logout/logout.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {path:'login',component: LoginComponent},\r\n  {path:'register',component:RegitrationComponent},\r\n  {path: 'logout', component: LogoutComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegitrationComponent],\r\n  imports: [CommonModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forChild(routes), FormsModule\r\n\r\n  ],\r\nproviders: [],\r\n})\r\nexport class AuthRoutingModule {\r\n\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {TokenStorageService} from '../../services/tokenStorage.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {AccountService} from '../../services/account.service';\r\nimport {IUser} from '../../models/IUser';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: any = {};\r\n  avatarUrl: string;\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMess = '';\r\n  roles: string[] = [];\r\n  account: IUser;\r\n  myGroup: FormGroup;\r\n  returnUrl: string;\r\n\r\n  constructor(private authService: AuthService,\r\n              private tokenStorage: TokenStorageService,\r\n              private router: Router,\r\n              private accountService: AccountService,\r\n              private route: ActivatedRoute\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.returnUrl = this.route.snapshot.queryParams[this.returnUrl] || '/blogs/list';\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.authService.login(this.form)\r\n      .subscribe(\r\n        data => {\r\n          // login successful so redirect to return url\r\n          this.router.navigateByUrl( this.returnUrl);\r\n          this.tokenStorage.saveToken(data.accessToken);\r\n          console.log(data.accessToken);\r\n          this.tokenStorage.saveAccountId(data.id);\r\n          console.log(data);\r\n          this.tokenStorage.saveStatusWhenUserLogged('logged');\r\n          this.accountService.findAccountById(data.id).subscribe(dataAccount => {\r\n            this.tokenStorage.saveUserAvatar(dataAccount.avatar);\r\n            this.roles = dataAccount.roles;\r\n          });\r\n          this.isLoginFailed = false;\r\n          this.isLoggedIn = true;\r\n        },\r\n        error => {\r\n          // login failed so display error\r\n          this.errorMess = error.error.message;\r\n          this.isLoginFailed = true;\r\n        });\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"width: 30%\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"card card-container\">\r\n      <img\r\n        id=\"profile-img\"\r\n        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n        class=\"profile-img-card\"\r\n      />\r\n      <form\r\n        *ngIf=\"!isLoggedIn\"\r\n        name=\"form\"\r\n        (ngSubmit)=\"f.form.valid && onSubmit()\"\r\n        #f=\"ngForm\"\r\n        novalidate\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"username\"\r\n            [(ngModel)]=\"form.email\"\r\n            required\r\n            #email=\"ngModel\"\r\n          />\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            role=\"alert\"\r\n            *ngIf=\"f.submitted && email.invalid\"\r\n          >\r\n            Email is required!\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            [(ngModel)]=\"form.password\"\r\n            required\r\n            minlength=\"4\"\r\n            #password=\"ngModel\"\r\n          />\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            role=\"alert\"\r\n            *ngIf=\"f.submitted && password.invalid\"\r\n          >\r\n            <div *ngIf=\"password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Password must be at least 4 characters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button class=\"btn btn-primary btn-block\">\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div\r\n            class=\"alert alert-danger\"\r\n            role=\"alert\"\r\n            *ngIf=\"f.submitted && isLoginFailed\"\r\n          >\r\n            Login failed: {{ errorMess }}\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\r\n        Logged in as {{ roles }}.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from \"../../services/auth.service\";\r\nimport {IUser} from \"../../models/IUser\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-regitration',\r\n  templateUrl: './regitration.component.html',\r\n  styleUrls: ['./regitration.component.css']\r\n})\r\nexport class RegitrationComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authService: AuthService,\r\n              private route: Router ) { }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      nickName: ['', Validators.required],\r\n      birthDay: ['', Validators.required],\r\n      phoneNumber:['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', Validators.required]\r\n    }, {\r\n      validator: MustMatch('password', 'confirmPassword')\r\n    });\r\n\r\n    function MustMatch(controlName: string, matchingControlName: string) {\r\n      return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n          // return if another validator has already found an error on the matchingControl\r\n          return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n          matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n          matchingControl.setErrors(null);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n// Goi f de ngan gon hon\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n     const dataJson = this.registerForm.value;\r\n    this.authService.register(dataJson).subscribe(result=>{\r\n      console.log(result);\r\n      alert('REGISTER SUCCCESSS ! \\n\\n' + \"Response form htttp \" +JSON.stringify(result))\r\n      this.route.navigate(['auth/login'])\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron\">\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3\">\r\n        <h3>Registration to join Blog Phong Thuy</h3>\r\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"form-group\">\r\n            <label>First Name</label>\r\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n            <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Last Name</label>\r\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n            <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Nick Name</label>\r\n            <input type=\"text\" formControlName=\"nickName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.nickName.errors }\" />\r\n            <div *ngIf=\"submitted && f.nickName.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.nickName.errors.required\">Nick Name is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Birthday</label>\r\n            <input type=\"date\" formControlName=\"birthDay\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.birthDay.errors }\" />\r\n            <div *ngIf=\"submitted && f.birthDay.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.birthDay.errors.required\">BirthDay is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Phone Number</label>\r\n            <input type=\"text\" formControlName=\"phoneNumber\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.phoneNumber.errors }\" />\r\n            <div *ngIf=\"submitted && f.phoneNumber.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.phoneNumber.errors.required\">PhoneNumber is required</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\r\n            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.email.errors.required\">Email is required</div>\r\n              <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n              <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Confirm Password</label>\r\n            <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\r\n            <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\r\n              <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <button class=\"btn btn-primary\">Register</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}